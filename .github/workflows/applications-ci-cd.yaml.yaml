name: CI/CD - Applications

on:
  push:
    branches:
      - 'main'
      - 'release-applications/**'
    paths:
      - 'rune-service/**'
      - 'rune-service-2/**'
      - 'rune-service-3/**'
      - 'test/rune-service-4/**'

  pull_request:
    paths:
      - 'rune-service/**'
      - 'rune-service-2/**'
      - 'rune-service-3/**'
      - 'test/rune-service-4/**'

jobs:
  changed-projects:
    outputs:
      rune-service: ${{ steps.map-changed-projects.outputs['rune-service'] == 'true' }}
      rune-service-2: ${{ steps.map-changed-projects.outputs['rune-service-2'] == 'true' }}
      rune-service-3: ${{ steps.map-changed-projects.outputs['rune-service-3'] == 'true' }}
      test/rune-service-4: ${{ steps.map-changed-projects.outputs['test/rune-service-4'] == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get changed projects
        id: changed-projects
        uses: tj-actions/changed-files@v44
        with:
          dir_names: true
          dir_names_exclude_current_dir: true
          files: |
            rune-service/**
            rune-service-2/**
            rune-service-3/**
            test/rune-service-4/**

      - name: Map changed projects to output
        id: map-changed-projects
        env:
          ALL_CHANGED_PROJECTS: ${{ steps.changed-projects.outputs.all_changed_files }}
        run: |
          for project in ${ALL_CHANGED_PROJECTS}; do
            echo "$project=true" >> $GITHUB_OUTPUT
          done

  release-please:
    outputs:
      rune-service: ${{ steps.release-please.outputs['rune-service--release_created'] == 'true' }}
      rune-service-version: ${{ steps.release-please.outputs['rune-service--version'] }}
      rune-service-2: ${{ steps.release-please.outputs['rune-service-2--release_created'] == 'true' }}
      rune-service-2-version: ${{ steps.release-please.outputs['rune-service-2--version'] }}
      rune-service-3: ${{ steps.release-please.outputs['rune-service-3--release_created'] == 'true' }}
      rune-service-3-version: ${{ steps.release-please.outputs['rune-service-3--version'] }}
      test/rune-service-4: ${{ steps.release-please.outputs['test/rune-service-4--release_created'] == 'true' }}
      test/rune-service-4-version: ${{ steps.release-please.outputs['test/rune-service-4--version'] }}
    runs-on: ubuntu-latest
    steps:
      - name: ðŸš€ Release Please
        if: "github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release-applications/') && startsWith(github.event.head_commit.message, 'chore: release applications from branch ')"
        uses: googleapis/release-please-action@v4
        id: release-please
        with:
          include-component-in-tag: true
          skip-github-pull-request: true
          target-branch: ${{ github.ref_name }}
          config-file: release-please/release-please-config-release-applications.json
          manifest-file: release-please/.release-please-manifest-release-applications.json

  dump:
    needs: [changed-projects, release-please]
    runs-on: ubuntu-latest
    steps:
      - name: DUMP
        env:
          CHANGED_PROJECTS: ${{ toJson(needs.changed-projects.outputs) }}
          RELEASE_PLEASE: ${{ toJson(needs.release-please.outputs) }}
        run: |
          echo "See env"

  rune-service-ci-cd:
    needs: [changed-projects, release-please]
    if: needs.changed-projects.outputs['rune-service'] == 'true' ||
      needs.release-please.outputs['rune-service'] == 'true'
    uses: ./.github/workflows/reusable-kotlin-services-ci-cd.yaml
    with:
      project-name: rune-service
      project-path: rune-service
      released: ${{ needs.release-please.outputs['test/rune-service'] == 'true' }}
      release-version: ${{ needs.release-please.outputs['rune-service-version'] }}

  rune-service-2-ci-cd:
    needs: [changed-projects, release-please]
    if: needs.changed-projects.outputs['rune-service-2'] == 'true' ||
      needs.release-please.outputs['rune-service-2'] == 'true'
    uses: ./.github/workflows/reusable-kotlin-services-ci-cd.yaml
    with:
      project-name: rune-service-2
      project-path: rune-service-2
      released: ${{ needs.release-please.outputs['test/rune-service-2'] == 'true' }}
      release-version: ${{ needs.release-please.outputs['rune-service-2-version'] }}

  rune-service-3-ci-cd:
    needs: [changed-projects, release-please]
    if: needs.changed-projects.outputs['rune-service-3'] == 'true' ||
      needs.release-please.outputs['rune-service-3'] == 'true'
    uses: ./.github/workflows/reusable-kotlin-services-ci-cd.yaml
    with:
      project-name: rune-service-3
      project-path: rune-service-3
      released: ${{ needs.release-please.outputs['test/rune-service-3'] == 'true' }}
      release-version: ${{ needs.release-please.outputs['rune-service-3-version'] }}

  rune-service-4-ci-cd:
    needs: [changed-projects, release-please]
    if: needs.changed-projects.outputs['test/rune-service-4'] == 'true' ||
      needs.release-please.outputs['test/rune-service-4'] == 'true'
    uses: ./.github/workflows/reusable-kotlin-services-ci-cd.yaml
    with:
      project-name: rune-service-4
      project-path: test/rune-service-4
      released: ${{ needs.release-please.outputs['test/rune-service-4'] == 'true' }}
      release-version: ${{ needs.release-please.outputs['test/rune-service-4-version'] }}
